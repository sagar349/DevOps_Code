---
# 1. User Management
- name: Manage Users
  hosts: all
  tasks:
    - name: Create a user
      ansible.builtin.user:
        name: devops
        state: present

---
# 2. Package Installation
- name: Install Packages
  hosts: all
  tasks:
    - name: Install Nginx
      ansible.builtin.package:
        name: nginx
        state: present

---
# 3. Service Management
- name: Manage Services
  hosts: all
  tasks:
    - name: Ensure Nginx is running
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes

---
# 4. File Management
- name: Manage Files
  hosts: all
  tasks:
    - name: Copy a file
      ansible.builtin.copy:
        src: myfile.txt
        dest: /tmp/myfile.txt

---
# 5. Configuration Management
- name: Deploy Configurations
  hosts: all
  tasks:
    - name: Deploy a template
      ansible.builtin.template:
        src: config.j2
        dest: /etc/myconfig.conf

---
# 6. Docker Deployment
- name: Deploy Docker Containers
  hosts: all
  tasks:
    - name: Run a Docker container
      community.docker.docker_container:
        name: myapp
        image: nginx
        state: started

---
# 7. Kubernetes Deployment
- name: Deploy to Kubernetes
  hosts: localhost
  tasks:
    - name: Apply Kubernetes manifests
      ansible.builtin.command: kubectl apply -f k8s-deployment.yaml

---
# 8. System Updates
- name: Update System
  hosts: all
  tasks:
    - name: Update all packages
      ansible.builtin.package:
        name: '*'
        state: latest

---
# 9. Firewall & Security
- name: Configure Firewall
  hosts: all
  tasks:
    - name: Allow HTTP traffic
      ansible.builtin.firewalld:
        service: http
        permanent: yes
        state: enabled

---
# 10. Backup & Restore
- name: Backup and Restore
  hosts: all
  tasks:
    - name: Create a backup
      ansible.builtin.archive:
        path: /var/www/html
        dest: /backup/site.tar.gz


---
# It will install three packages with loop
- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - nginx
    - git
    - curl

 # We need to refer here   
- hosts: all
  become: yes
  tasks:
    - include_tasks: loop-file.yml
    

- name: Launch multiple EC2 instances
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Launch EC2 instances
      amazon.aws.ec2_instance:
        name: "{{ item.name }}"
        key_name: my-key
        instance_type: "{{ item.type }}"
        image_id: ami-0abcdef1234567890
        region: us-east-1
        wait: yes
        count: 1
      loop:
        - { name: "web-server-1", type: "t2.micro" }
        - { name: "web-server-2", type: "t2.micro" }

- name: Create multiple users
  ansible.builtin.user:
    name: "{{ item }}"
    state: present
  with_items:
    - alice
    - bob
    - charlie

# conditional failure by using failed_when
- name: Check if a file exists
  ansible.builtin.stat:
    path: /path/to/file.txt
  register: file_status
  failed_when: file_status.stat.exists == false # fails the task if file does not exists

# block , rescue and always
tasks:
  - block:
      - name: Try to install nginx
        apt:
          name: nginx
          state: present
    rescue:
      - name: Print failure message
        debug:
          msg: "Nginx installation failed, trying something else"
    always:
      - name: clean up Files
        ansible.builtin.file:
          path: /path/to/temp/files
          state: absent
          

